import fopen, fprintf, fclose;

function byet2bits(buff, val)
{
	buff[0] = val >> 7;
	buff[1] = (val >> 6) & 1;
	buff[2] = (val >> 5) & 1;
	buff[3] = (val >> 4) & 1;
	buff[4] = (val >> 3) & 1;
	buff[5] = (val >> 2) & 1;
	buff[6] = (val >> 1) & 1;
	buff[7] = val & 1;
}

var bits[8];
var fd = fopen!native("convert.h", "w");
if(fd == NULL)
	throw "Failed to open the file";

fprintf(fd, "#ifndef _CPPFUN_CONVERTY_H\n");
fprintf(fd, "#define _CPPFUN_CONVERTY_H\n\n");
fprintf(fd, "#include \"common.h\"\n");

fprintf(fd, "#define CONST2BYTE(val) JOIN2(CONST2BYTE, val)\n");
for(var i = 0; i < 256; i++)
{
	byet2bits(bits, i);
	fprintf(fd, "#define CONST2BYTE_%lld (%lld, %lld, %lld, %lld, %lld, %lld, %lld, %lld)\n", i, ...bits);
}

fprintf(fd, "\n#define _BYTE2CONST(b7, b6, b5, b4, b3, b2, b1, b0) BYTE2CONST_##b7##_##b6##_##b5##_##b4##_##b3##_##b2##_##b1##_##b0\n");
fprintf(fd, "#define BYTE2CONST(val) EVAL(_BYTE2CONST val)\n");
for(var i = 0; i < 256; i++)
{
	byet2bits(bits, i);
	fprintf(fd, "#define BYTE2CONST_%lld_%lld_%lld_%lld_%lld_%lld_%lld_%lld %lld\n", ...bits, i);
}

fprintf(fd, "\n#endif\n");
